#include <iostream>
#include <tuple>
#include <vector>

using namespace std;
using tp = long long int;

vector<tp> t, rec;
vector<bool> vis;
vector<vector<tp>> e;

tp calc(tp x) {
  if (!rec[x]) {
    rec[x] = 0;
    for (auto&& i : e[x]) {
      rec[x] = max(rec[x], calc(i));
    }
    rec[x] += t[x];
  }
  return rec[x];
}

signed main() {
  tp n, m, MAX = 0;
  scanf("%lld%lld", &n, &m);
  tie(t, rec, vis, e) = make_tuple(vector<tp>(n + 1), vector<tp>(n + 1), vector<bool>(n + 1, 0), vector<vector<tp>>(n + 1));
  for (tp i = 1; i <= n; ++i) {
    scanf("%lld", &t[i]);
  }
  while (m--) {
    tp u, v;
    scanf("%lld%lld", &u, &v);
    e[v].push_back(u);
  }
  for (tp i = 1; i <= n; ++i) {
    MAX = max(MAX, calc(i));
  }
  cout << MAX << '\n';
  return EXIT_SUCCESS;
}

/*#################################################################
#.................................................................#
#............................This.Code.Was.Created.By.RBTree......#
#.............#......#...............Limiting-Factor..............#
#............#.#....#.#.................Soul-Code.................#
#.............########............................................#
#............#........#..##############################...........#
#...........#..V....V......#..#........................#..#...#...#
#............#........#....#..........###..###..........#..#.#.#..#
#............#..X##X..#..#............#....#.#...........#..#...#.#
#...........#...N##N...#..#...........###..###..........#.........#
#.......MOE..#..@.....#....#.#.#.#...................#.#..........#
#.............########.....#.#.#.##############.#.#..#.#..........#
#..........................#.#.#.#.............#.#.#.#.#..........#
#......#########...........#.#.#.#.................#.#.#..........#
#.....#.........#..........#.#.#.#.................#.#.#..........#
#.#.#.#G#R#A#S#S#.#.#......#.#.#.#.................#.#.#..........#
#.###################......#.#.#.#.................#.#.#..........#
#...........................#.#.#...................#.#...........#
#.................................................................#
#################################################################*/