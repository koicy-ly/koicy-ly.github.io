#include <iostream>

using namespace std;
using tp = int64_t;
constexpr tp Hat_S = 15, Mod = 100'000'000;

bool state[Hat_S][Hat_S];
tp f[2][1 << Hat_S];

signed main() {
  tp n, m, MaxStateVal, sum = 0;
  cin >> n >> m;
  MaxStateVal = 1 << m;
  **f = 1;
  for (tp i = 0; i < n; ++i) {
    for (tp j = 0; j < m; ++j) {
      cin >> state[i][j];
    }
  }
  for (tp i = 0; i < n; ++i) {
    static bool t = 1, at = 0;
    for (tp j = 0; j < m; ++j) {
      for (tp s = 0; s < MaxStateVal; ++s) {
        tp one = s | (1 << j), zero = s & ~(1 << j);
        if (s == zero) {
          f[t][s] = (f[at][one] + f[at][zero]) % Mod;
        } else if (state[i][j] && (!j || ~(s >> (j - 1)) & 1)) {
          f[t][s] = f[at][zero];
        } else {
          f[t][s] = 0;
        }
      }
      t ^= 1;
      at ^= 1;
    }
  }
  for (tp i = 0, t = n * m & 1; i < MaxStateVal; ++i) {
    sum = (sum + f[t][i]) % Mod;
  }
  cout << sum << '\n';
  return 0;
}

/*#################################################################
#.................................................................#
#.............#......#............Created.By.RBTree...............#
#............#.#....#.#...........................................#
#.............########............................................#
#............#........#..##############################...........#
#...........#..V........V..#..#........................#..#...#...#
#............#........#....#..........###..###..........#..#.#.#..#
#............#..X##X..#..#............#....#.#...........#..#...#.#
#...........#...N##N...#..#...........###..###..........#.........#
#.......MOO..#........#....#.#.#.#...................#.#..........#
#.............########.....#.#.#.##############.#.#..#.#..........#
#..........................#.#.#.#.............#.#.#.#.#..........#
#......#########...........#.#.#.#.................#.#.#..........#
#.....#.........#..........#.#.#.#.................#.#.#..........#
#.#.#.#G#R#A#S#S#.#.#......#.#.#.#.................#.#.#..........#
#.###################......#.#.#.#.................#.#.#..........#
#...........................#.#.#...................#.#...........#
#.................................................................#
#################################################################*/